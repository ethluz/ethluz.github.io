{"version":3,"sources":["webpack:///./src/components/Layoutcontent.js","webpack:///./src/components/docs/Sidebar.js","webpack:///./src/templates/blog-post.js"],"names":["theme","monospace","tablet","mobile","colors","primary","text","TemplateWrapper","_ref","children","react_default","a","createElement","Helmet_default","title","Navbar","styled_components_browser_esm","Wrapper","styled","aside","withConfig","displayName","componentId","props","List","ul","ListItem","li","depth","defaultProps","Divider","Sidebar","headings","extras","slugger","GithubSlugger","mainHeaders","filter","_ref2","length","keys","map","_ref3","value","slug","key","href","isEmpty","__webpack_require__","d","__webpack_exports__","pageQuery","Documentation","main","DocContents","div","monspace","DocHeader","header","BlogPost","post","data","markdownRemark","pickBy","mapKeys","pick","frontmatter","identity","Layoutcontent","description","dangerouslySetInnerHTML","__html","html"],"mappings":"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","file":"component---src-templates-blog-post-js-e72b599c036ee4d72ae9.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport  { ThemeProvider } from 'styled-components'\nimport './all.sass'\nimport './styles.css'\nimport Navbar from '../components/Navbar'\nconst theme = {\n  monospace: `'Source Code Pro', monospace`,\n  tablet: `only screen and (max-width: 800px)`,\n  mobile: `only screen and (max-width: 650px)`,\n  colors: {\n    primary: '#2097e4',\n    text: '#333',\n  },\n}\n\nconst TemplateWrapper = ({ children }) => (\n    <div>\n        <Helmet title=\"luz-blog\" />  \n        <Navbar />\n        <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </div>\n  )\n  \n  export default TemplateWrapper","import React from 'react'\nimport { map, keys, isEmpty } from 'lodash'\nimport GithubSlugger from 'github-slugger'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.aside`\n  position: fixed;\n  top: 0;\n  padding: 64px 2em 2em 2em;\n  width: 20%;\n  overflow: auto;\n  right: 0;\n\n  @media ${props => props.theme.mobile} {\n    display: none;\n  }\n`\nconst List = styled.ul`\n  padding: 2rem 0;\n  display: block;\n  color: #666;\n  font-size: 0.875rem;\n  list-style: none;\n`\n\nconst ListItem = styled.li`\n  margin: 0 0 0.5rem ${props => props.depth - 2}rem;\n\n  a {\n    color: inherit;\n    font: inherit;\n    text-decoration: none;\n  }\n`\nListItem.defaultProps = { depth: 2 }\n\nconst Divider = styled.li`\n  margin: 1em 0 1em 0;\n  border-top: 2px dashed #f0f0f0;\n`\n\nexport default ({ headings, extras }) => {\n  const slugger = new GithubSlugger()\n  const mainHeaders = headings.filter(({ depth }) => depth <= 3)\n  if (mainHeaders.length + keys(extras).length < 3) return <aside />\n\n  return (\n    <Wrapper>\n      <List>\n        {mainHeaders.map(({ value, depth }) => {\n          const slug = slugger.slug(value)\n          return (\n            <ListItem key={slug} depth={depth}>\n              <a href={`#${slug}`}>{value}</a>\n            </ListItem>\n          )\n        })}\n        {isEmpty(extras) ? '' : <Divider />}\n        {map(extras, (href, text) => (\n          <ListItem key={href}>\n            <a href={`#${href}`}>{text}</a>\n          </ListItem>\n        ))}\n      </List>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\n// import Link from 'gatsby-link'\nimport { pickBy, mapKeys, pick, identity } from 'lodash'\n//import styled, { injectGlobal } from 'styled-components'\nimport styled from 'styled-components'\n\nimport { graphql } from 'gatsby'\n// import PropTypes from 'prop-types'\n\nimport Layout from '../components/Layoutcontent'\nimport Sidebar from '../components/docs/Sidebar'\n\n\n\nconst Documentation = styled.main`\n  float: left;\n  width: 60%;\n  margin-left: 20%;\n  padding: 2em 4em;\n\n  @media ${props => props.theme.mobile} {\n    width: 100%;\n    margin: 0;\n  }\n`\n\nconst DocContents = styled.div`\n  /**\n   * Code ðŸ’»\n   */\n  code {\n    background: #f4f7fb;\n    padding: 0 0.25em;\n    font-size: 0.95em;\n    border-radius: 3px;\n    font-family: ${props => props.theme.monspace};\n  }\n\n  .gatsby-highlight pre {\n    background: #f9fbfd;\n    border: 1px solid #ececec;\n    border-radius: 3px;\n    padding: 0.5em 1em;\n    overflow: auto;\n    margin: 0 0 1em 0;\n  }\n\n  .gatsby-highlight code {\n    background: none;\n    color: inherit;\n    padding: 0;\n    border-radius: 0;\n  }\n\n  /**\n   * Tables \n   */\n  table {\n    border: 1px solid #ececec;\n    overflow: hidden;\n    border-collapse: separate;\n    border-spacing: 0;\n    width: 100%;\n    margin: 1em 0;\n    border-radius: 3px;\n  }\n\n  th {\n    font-weight: 600;\n  }\n\n  h3 {\n    margin: 0.5em 0;\n  }\n\n  th:empty {\n    display: none;\n  }\n\n  td,\n  th {\n    text-align: left;\n    padding: 0.375em 0.75em 0.375em 0.75em;\n  }\n\n  td {\n    line-height: 1.75em;\n    vertical-align: top;\n  }\n\n  .bordered-table table {\n    border-width: 0 1px 1px 0;\n  }\n\n  .bordered-table td,\n  .bordered-table th {\n    border: 1px solid #ececec;\n    border-right: 0;\n    border-bottom-width: 0;\n  }\n\n  .fixed-table table {\n    table-layout: fixed;\n  }\n\n  .attributes-table td {\n    line-height: 1.5em;\n  }\n\n  .attributes-table td:first-child {\n    text-align: right;\n    line-height: 1em;\n  }\n\n  .attributes-table strong {\n    white-space: nowrap;\n  }\n\n  small {\n    color: #888;\n    display: block;\n    margin-top: 0.25em;\n    font-size: 0.875em;\n    font-weight: 400;\n    line-height: 1em;\n  }\n\n  img {\n    display: block;\n    margin: 2rem auto;\n    max-width: 600px;\n    width: 98%;\n  }\n`\n\nconst DocHeader = styled.header`\n  padding: 0 0 0.25em 0;\n  margin-bottom: 1.5em;\n  border-bottom: 2px solid #f0f0f0;\n\n  h1 {\n    margin-top: 0;\n    margin-bottom: 0.5em;\n  }\n`\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data;\n  const extras = pickBy(\n    mapKeys(\n      pick(post.frontmatter, ['tests', 'issues', 'edit']),\n      (href, text) => {\n        switch (text) {\n          case 'tests':\n            return 'Litmus Tests'\n\n          case 'issues':\n            return 'Report a Bug'\n\n          case 'edit':\n            return 'Edit this Page'\n        }\n      }\n    ),\n    identity\n  )\n  return (\n     <Layout>\n         <div>\n         {/* 11111 */}\n         {/* <ThemeProvider theme={theme}> */}\n         {/* <React.Fragment> */}\n            <Helmet>\n                <title>{post.frontmatter.title} &middot;  Blog </title>\n            </Helmet>\n        \n            <Documentation>\n                <DocHeader>\n                <   h1>{post.frontmatter.title}</h1>\n                { post.frontmatter.description ? <p>{post.frontmatter.description}</p> : ''}\n                </DocHeader>\n                <DocContents dangerouslySetInnerHTML={{ __html: post.html }} />\n            </Documentation>\n            <Sidebar headings={post.headings} extras={extras} />\n            {/* </React.Fragment> */}\n         {/* </ThemeProvider> */}\n        </div>\n    </Layout>\n\n  )\n}\n\n// BlogPost.propTypes = {\n//   data: PropTypes.shape({\n//     markdownRemark: PropTypes.object,\n//   }),\n// }\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      headings {\n        value\n        depth\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}