{"data":{"markdownRemark":{"id":"1f864f41-4336-5ff1-80c8-f2f538e888f2","html":"<p>React是基于组件，虚拟dom的前端开发框架。</p>\n<p>所谓基于组件即react中是一个组件嵌套一个组件，组件可复用。所谓虚拟dom，既react中的视图，是虚拟的，全部是js，而非html。</p>\n<h2 id=\"初识组件\"><a href=\"#%E5%88%9D%E8%AF%86%E7%BB%84%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>初识组件</h2>\n<p>一个组件的构成：\nimport React, { Component } from 'react'</p>\n<p>class ShoppingList extends React.Component {\nrender() {\nreturn (\n<div className=\"shopping-list\">\n<h1>Shopping List for {this.props.name}</h1>\n<ul>\n<li>Instagram</li>\n<li>WhatsApp</li>\n<li>Oculus</li>\n</ul>\n</div>\n);\n}\n}</p>\n<p>第一行中，import from 是es6中的语法，具体es6的教程学习，可参考廖雪峰大神的博客。\n语法中的class也一样是es6. 可以类比其他面向对象的语言。</p>\n<p>其中的render方法，用于加载视图，在return中写入JSX。\nrender() {\n...\n}</p>\n<p><em>关于jsx</em>可参考[]\nJsx日常使用需注意要点：\n其实就是html的语法，但直接复制html是否可以？不行。需要做两步转换：1.class变成className 2.标签结尾用/闭合。</p>\n <div className=\"control has-icons-left has-icons-right\">\n \t<input className=\"input is-info\" type=\"text\" placeholder=\"小数点位数\" onChange={this.decimalSet} />\n </div>                         \n如上面的代码，仔细看input，就是在结尾加入了，“/”。在看看className.\n当然其中也可以使用js的变量或调用当前组件class中的方法，例如上图中的: \n{this.decimalSet}\n#### 初始化脚手架：create-react-app\n<p>关于npm yarn等如何使用，可自行搜索。他们都是nodejs时代必备的工具。\n使用 <code class=\"language-text\">npm -g install create-react-app</code>即可安装</p>\n<p>使用create-react-app创建一个项目：\ncreate-react-app daopark\n然后进入进入darpark，安装依赖包\ncd daopark\nyarn install </p>\n<h2 id=\"目录结构解析\"><a href=\"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目录结构解析</h2>\n<p>(img)\n<em>Public：</em>\n所有编译通过的都会出现在这个目录下。\n<em>Src：</em>\n我们日常开发的目录，其中index.js是入口， app.js是index.js中引入的第一个组件。css则是样式，create-react-app默认使用es6.所以我们会注意到，开头的：<code class=\"language-text\">import  *  from *</code></p>\n<p>import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';</p>\n<p>class App extends Component {\nrender() {\nreturn (\n<div className=\"App\">\n<header className=\"App-header\">\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\n<h1 className=\"App-title\">Welcome to React</h1>\n</header>\n<p className=\"App-intro\">\nTo get started, edit <code>src/App.js</code> and save to reload.\n</p>\n</div>\n);\n}\n}</p>\n<p>export default App;</p>\n<p><em>最后，package.json文件：</em>\n打开它，看看内容：\n{\n\"name\": \"daopark\",\n\"version\": \"0.1.0\",\n\"private\": true,\n\"dependencies\": {\n\"react\": \"^16.5.1\",\n\"react-dom\": \"^16.5.1\",\n\"react-scripts\": \"1.1.5\"\n},\n\"scripts\": {\n\"start\": \"react-scripts start\",\n\"build\": \"react-scripts build\",\n\"test\": \"react-scripts test --env=jsdom\",\n\"eject\": \"react-scripts eject\"\n}\n}</p>\n<p>scripts中，是运行，其中，start是dev环境下的运行，build为编译。对于scripts中的命令，我们可使用npm run 或yarn 运行。例如，我们先直接运行：\nyarn start\n然后看到：\n(img)\n在浏览器中打开[http://localhost:3000/]：\n(img)</p>\n<p>作业：修改其中的：welcome to react  为：欢迎来到dao世界.</p>","headings":[{"value":"初识组件","depth":2},{"value":"目录结构解析","depth":2}],"frontmatter":{"date":"December 17, 2018","title":"react开发dapp-1入门react","description":"git使用备忘录,作为即查的git使用指南够用,但如果作为入门学习或深入.还是看官方文档吧.","tags":["react","web3","前端","dapp"]}}},"pageContext":{"id":"1f864f41-4336-5ff1-80c8-f2f538e888f2"}}