{"version":3,"sources":["webpack:///./src/templates/template-blog-post.js","webpack:///./src/components/content/tags-section.js"],"names":["renderAst","rehype_react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_2___default","Compiler","BlogPostTemplate","render","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","canonicalLink","post","this","props","data","markdownRemark","prev","pageContext","next","prevNextLinkStyles","&&","boxShadow","borderBottom","fontFamily","_utils_typography__WEBPACK_IMPORTED_MODULE_12__","b","headerFontFamily","join","fontWeight","color","_utils_presets__WEBPACK_IMPORTED_MODULE_11__","colors","gatsby","prevNextLabelStyles","Object","assign","marginTop","marginBottom","gray","calm","d","lineHeight","frontmatter","Glamor","rel","href","_components_layout__WEBPACK_IMPORTED_MODULE_10__","location","_components_container__WEBPACK_IMPORTED_MODULE_13__","className","css","paddingBottom","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","name","content","excerpt","image","childImageSharp","resize","src","timeToRead","rawDate","display","c","_utils_presets__WEBPACK_IMPORTED_MODULE_11___default","Tablet","flex","marginLeft","_ref","_Object$assign","children","options","margin","Mobile","date","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_9__","OutboundLink","publishedAt","Desktop","showImageInArticle","gatsby_image__WEBPACK_IMPORTED_MODULE_8___default","fluid","imageAuthor","imageAuthorLink","htmlAst","_components_content_tags_section__WEBPACK_IMPORTED_MODULE_14__","tags","borderTop","ui","light","paddingTop","Phablet","width","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","fields","slug","react_icons_lib_md_arrow_back__WEBPACK_IMPORTED_MODULE_7___default","style","verticalAlign","textAlign","marginRight","react_icons_lib_md_arrow_forward__WEBPACK_IMPORTED_MODULE_6___default","Component","__webpack_exports__","default","x","pageQuery","call","361","e","t","n","r","_","__webpack_require__","tagLinks","map","tag","i","divider","length","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","kebabCase","_utils_typography__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-templates-template-blog-post-js-42c07a7a7525321b5075.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\n\nimport rehypeReact from \"rehype-react\"\n\nimport ArrowForwardIcon from \"react-icons/lib/md/arrow-forward\"\nimport ArrowBackIcon from \"react-icons/lib/md/arrow-back\"\nimport Img from \"gatsby-image\"\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\n\nimport Layout from \"../components/layout\"\nimport presets, { colors } from \"../utils/presets\"\nimport typography, { rhythm, scale, options } from \"../utils/typography\"\nimport Container from \"../components/container\"\n\nimport TagsSection from \"../components/content/tags-section\"\n\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement\n}).Compiler\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const prev = this.props.pageContext.prev\n    const next = this.props.pageContext.next\n    const prevNextLinkStyles = {\n      \"&&\": {\n        boxShadow: `none`,\n        borderBottom: 0,\n        fontFamily: options.headerFontFamily.join(`,`),\n        fontWeight: `bold`,\n        color: colors.gatsby,\n      },\n    }\n    const prevNextLabelStyles = {\n      marginTop: 0,\n      marginBottom: 0,\n      color: colors.gray.calm,\n      fontWeight: `normal`,\n      ...scale(0),\n      lineHeight: 1,\n    }\n    const BioLine = ({ children }) => (\n      <p\n        css={{\n          ...scale(-2 / 5),\n          fontFamily: typography.options.headerFontFamily.join(`,`),\n          lineHeight: 1.3,\n          margin: 0,\n          color: colors.gray.calm,\n          [presets.Mobile]: {\n            ...scale(-1 / 5),\n            lineHeight: 1.3,\n          },\n        }}\n      >\n        {children}\n      </p>\n    )\n    let canonicalLink\n    if (post.frontmatter.canonicalLink) {\n      canonicalLink = (\n        <link rel=\"canonical\" href={post.frontmatter.canonicalLink} />\n      )\n    }\n\n    return (\n      <Layout location={this.props.location}>\n        <Container className=\"post\" css={{ paddingBottom: `0` }}>\n          {/* Add long list of social meta tags */}\n          <Helmet>\n            <title>{post.frontmatter.title}</title>\n            {/* <link\n              rel=\"author\"\n              href={`https://gatsbyjs.org${\n                post.frontmatter.author.fields.slug\n              }`}\n            /> */}\n            <meta\n              name=\"description\"\n              content={\n                post.frontmatter.excerpt\n                  ? post.frontmatter.excerpt\n                  : post.excerpt\n              }\n            />\n\n            <meta name=\"og:description\" content={post.excerpt} />\n            <meta name=\"twitter:description\" content={post.excerpt} />\n            <meta name=\"og:title\" content={post.frontmatter.title} />\n            {post.frontmatter.image && (\n              <meta\n                name=\"og:image\"\n                content={`https://gatsbyjs.org${\n                  post.frontmatter.image.childImageSharp.resize.src\n                }`}\n              />\n            )}\n            {post.frontmatter.image && (\n              <meta\n                name=\"twitter:image\"\n                content={`https://gatsbyjs.org${\n                  post.frontmatter.image.childImageSharp.resize.src\n                }`}\n              />\n            )}\n            <meta name=\"og:type\" content=\"article\" />\n            {/* <meta name=\"article:author\" content={post.frontmatter.author.id} /> */}\n            {/* <meta\n              name=\"twitter:creator\"\n              content={post.frontmatter.author.twitter}\n            /> */}\n            {/* <meta name=\"author\" content={post.frontmatter.author.id} /> */}\n            <meta name=\"twitter:label1\" content=\"Reading time\" />\n            <meta\n              name=\"twitter:data1\"\n              content={`${post.timeToRead} min read`}\n            />\n            <meta\n              name=\"article:published_time\"\n              content={post.frontmatter.rawDate}\n            />\n            {canonicalLink}\n          </Helmet>\n          <header\n            css={{\n              display: `flex`,\n              marginTop: rhythm(-1 / 4),\n              marginBottom: rhythm(1),\n              [presets.Tablet]: {\n                marginTop: rhythm(1 / 2),\n                marginBottom: rhythm(2),\n              },\n            }}\n          >\n            <div\n              css={{\n                flex: `0 0 auto`,\n              }}\n            >\n              {/* <Link to={post.frontmatter.author.id}>\n                <Img\n                  fixed={post.frontmatter.author.avatar.childImageSharp.fixed}\n                  css={{\n                    height: rhythm(2.3),\n                    width: rhythm(2.3),\n                    margin: 0,\n                    borderRadius: `100%`,\n                    display: `inline-block`,\n                    verticalAlign: `middle`,\n                  }}\n                />\n              </Link> */}\n            </div>\n            <div\n              css={{\n                flex: `1 1 auto`,\n                marginLeft: rhythm(1 / 2),\n              }}\n            >\n              \n              <BioLine>\n                {post.timeToRead} min read · {post.frontmatter.date}\n                {post.frontmatter.canonicalLink && (\n                  <span>\n                    {` `}\n                    (originally published at\n                    {` `}\n                    <OutboundLink href={post.frontmatter.canonicalLink}>\n                      {post.frontmatter.publishedAt}\n                    </OutboundLink>\n                    )\n                  </span>\n                )}\n              </BioLine>\n            </div>\n          </header>\n          <h1\n            css={{\n              marginTop: 0,\n              [presets.Desktop]: {\n                marginBottom: rhythm(5 / 4),\n              },\n            }}\n          >\n            {this.props.data.markdownRemark.frontmatter.title}\n          </h1>\n          {post.frontmatter.image &&\n            !(post.frontmatter.showImageInArticle === false) && (\n              <div\n                css={{\n                  marginBottom: rhythm(1),\n                }}\n              >\n                <Img fluid={post.frontmatter.image.childImageSharp.fluid} />\n                {post.frontmatter.imageAuthor &&\n                  post.frontmatter.imageAuthorLink && (\n                    <em>\n                      Image by\n                      {` `}\n                      <OutboundLink href={post.frontmatter.imageAuthorLink}>\n                        {post.frontmatter.imageAuthor}\n                      </OutboundLink>\n                    </em>\n                  )}\n              </div>\n            )}\n          <div className=\"post-body\">\n            {renderAst(this.props.data.markdownRemark.htmlAst)}\n          </div>\n          <TagsSection tags={this.props.data.markdownRemark.frontmatter.tags} />\n        </Container>\n        <div\n          css={{\n            borderTop: `1px solid ${colors.ui.light}`,\n            marginTop: rhythm(2),\n            [presets.Tablet]: {\n              marginTop: rhythm(2),\n              paddingBottom: rhythm(1),\n              paddingTop: rhythm(1),\n            },\n            [presets.Desktop]: {\n              marginTop: rhythm(3),\n              paddingBottom: rhythm(2),\n              paddingTop: rhythm(2),\n            },\n          }}\n        >\n\n          <Container>\n            <div\n              css={{ [presets.Phablet]: { display: `flex`, width: `100%` } }}\n            >\n              <div\n                css={{\n                  [presets.Phablet]: {\n                    width: `50%`,\n                  },\n                }}\n              >\n                {prev && (\n                  <Link to={prev.fields.slug} css={prevNextLinkStyles}>\n                    <h4 css={prevNextLabelStyles}>Previous</h4>\n                    <span\n                      css={{\n                        [presets.Tablet]: {\n                          marginLeft: `-1rem`,\n                        },\n                      }}\n                    >\n                      <ArrowBackIcon style={{ verticalAlign: `sub` }} />\n                      {prev.frontmatter.title}\n                    </span>\n                  </Link>\n                )}\n              </div>\n              <div\n                css={{\n                  textAlign: `right`,\n                  marginTop: rhythm(1),\n                  [presets.Phablet]: { marginTop: 0, width: `50%` },\n                }}\n              >\n                {next && (\n                  <Link to={next.fields.slug} css={prevNextLinkStyles}>\n                    <h4 css={prevNextLabelStyles}>Next</h4>\n                    <span\n                      css={{\n                        [presets.Tablet]: {\n                          marginRight: `-1rem`,\n                        },\n                      }}\n                    >\n                      {next.frontmatter.title}\n                      <ArrowForwardIcon style={{ verticalAlign: `sub` }} />\n                    </span>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </Container>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      excerpt\n      timeToRead\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        excerpt\n        date(formatString: \"MMMM Do YYYY\")\n        rawDate: date\n        # canonicalLink\n        # publishedAt\n        tags\n        image {\n          childImageSharp {\n            resize(width: 1500, height: 1500) {\n              src\n            }\n            fluid(maxWidth: 786) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        imageAuthor\n        imageAuthorLink\n        imageTitle\n        showImageInArticle\n        author {\n          id\n          bio\n          twitter\n          avatar {\n            childImageSharp {\n              fixed(\n                width: 63\n                height: 63\n                quality: 75\n                traceSVG: {\n                  turdSize: 10\n                  background: \"#f6f2f8\"\n                  color: \"#e0d6eb\"\n                }\n              ) {\n                ...GatsbyImageSharpFixed_tracedSVG\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { rhythm, scale } from \"../../utils/typography\"\nconst _ = require(`lodash`)\n\nconst TagsSection = ({ tags }) => {\n  if (!tags) return null\n  const tagLinks = tags.map((tag, i) => {\n    const divider = i < tags.length - 1 && <span>{` | `}</span>\n    return (\n      <span key={tag}>\n        <Link to={`/blog/tags/${_.kebabCase(tag)}`}>{tag}</Link>\n        {divider}\n      </span>\n    )\n  })\n  return (\n    <em\n      style={{\n        ...scale(-1 / 5),\n        display: `block`,\n        marginBottom: rhythm(1),\n      }}\n    >\n      tag范围:{tagLinks}\n    </em>\n  )\n}\n\nexport default TagsSection\n"],"sourceRoot":""}