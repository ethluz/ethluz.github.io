{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","postLinkss","map","post","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","className","frontmatter","title","id","excerpt","tag","pageContext","site","siteMetadata","totalCount","tagHeader","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","React","Component","tagPageQuery"],"mappings":"2NAKMA,4FACJC,kBACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAQ1CC,GAPYN,EAAMO,IAAI,SAAAC,GAAI,OAC9BC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAKK,KAAKC,OAAOC,MACxBN,EAAAC,EAAAC,cAACK,EAAA,KAAD,CAAMC,GAAIT,EAAKK,KAAKC,OAAOC,MACzBN,EAAAC,EAAAC,cAAA,MAAIO,UAAU,aAAaV,EAAKK,KAAKM,YAAYC,WAIpCpB,EAAMO,IAAI,SAAAC,GAAI,OAC7BC,EAAAC,EAAAC,cAAA,OACIO,UAAU,WACVN,IAAKJ,EAAKa,IAEVZ,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACK,EAAA,KAAD,CAAME,UAAU,kCAAkCD,GAAIT,EAAKK,KAAKC,OAAOC,MAClEP,EAAKK,KAAKM,YAAYC,QAI/BX,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACK,EAAA,KAAD,CAAME,UAAU,iBAAiBD,GAAIT,EAAKK,KAAKC,OAAOC,MACjDP,EAAKK,KAAKS,SAEfb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gBAINY,EAAMtB,KAAKC,MAAMsB,YAAYD,IAC7BH,EAAQnB,KAAKC,MAAMC,KAAKsB,KAAKC,aAAaN,MAC1CO,EAAa1B,KAAKC,MAAMC,KAAKC,kBAAkBuB,WAC/CC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEJ,EAFF,IAIf,OACEd,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAkBEpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQU,MAAUG,EAAL,MAAcH,IAE3BX,EAAAC,EAAAC,cAAA,WAASO,UAAU,uBACfT,EAAAC,EAAAC,cAAA,OACIO,UAAU,qBAEXT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,iCAAiCU,GAC7CtB,SA/DMyB,IAAMC,WAyEdlC,YAER,IAAMmC,EAAY","file":"component---src-templates-tags-js-104dea963c73c2a5a187.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>\n          <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n        </Link>\n      </li>\n    ))\n    const postLinkss = posts.map(post => (\n        <div\n            className=\"content \"\n            key={post.id}\n        >\n            <p>\n                <Link className=\"has-text-grey-darker title is-5\" to={post.node.fields.slug}>\n                    {post.node.frontmatter.title}\n                </Link>\n           \n            </p>\n            <p>\n                <Link className=\"has-text-grey \" to={post.node.fields.slug}>\n                    {post.node.excerpt}\n                </Link>\n                <br />\n                <br />\n            </p>\n        </div>\n      ))\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <Layout>\n        {/* <section className=\"section\">\n          <Helmet title={`${tag} | ${title}`} />\n          <div className=\"container content\">\n            <div className=\"columns\">\n              <div\n                className=\"column is-10 is-offset-1\"\n                style={{ marginBottom: '6rem' }}\n              >\n                <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                <ul className=\"taglist\">{postLinks}</ul>\n                <p>\n                  <Link to=\"/tags/\">全部分类</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section> */}\n        <Helmet title={`${tag} | ${title}`} />\n     \n        <section className=\"container max-width\">\n            <div \n                className=\"section is-center\"\n            >\n               <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                {postLinkss}\n                {/* <Link to=\"/tags/\">全部分类</Link> */}\n            </div>\n          \n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 400)  \n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}