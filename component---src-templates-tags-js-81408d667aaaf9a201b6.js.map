{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/Layout.js"],"names":["TagRoute","render","postLinkss","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","node","fields","slug","frontmatter","title","excerpt","tag","pageContext","site","siteMetadata","totalCount","tagHeader","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","React","Component","tagPageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_components_Navbar__WEBPACK_IMPORTED_MODULE_2__","TemplateWrapper","_ref","children"],"mappings":"2NAKMA,4FACJC,kBACE,IAQMC,EARQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAQvBC,IAAI,SAAAC,GAAI,OAC7BC,EAAAC,EAAAC,cAAA,OACIC,UAAU,WACVC,IAAKL,EAAKM,IAEVL,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMH,UAAU,kCAAkCI,GAAIR,EAAKS,KAAKC,OAAOC,MAClEX,EAAKS,KAAKG,YAAYC,QAI/BZ,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMH,UAAU,iBAAiBI,GAAIR,EAAKS,KAAKC,OAAOC,MACjDX,EAAKS,KAAKK,SAEfb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,eAINY,EAAMrB,KAAKC,MAAMqB,YAAYD,IAC7BF,EAAQnB,KAAKC,MAAMC,KAAKqB,KAAKC,aAAaL,MAC1CM,EAAazB,KAAKC,MAAMC,KAAKC,kBAAkBsB,WAC/CC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEJ,EAFF,IAIf,OACEd,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAkBEpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQW,MAAUE,EAAL,MAAcF,IAE3BZ,EAAAC,EAAAC,cAAA,WAASC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,OACIC,UAAU,qBAEXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAiCgB,GAC7C3B,SA/DM8B,IAAMC,WAyEdjC,YAER,IAAMkC,EAAY,+CChFzB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAAAA,EAAA,KAceM,IARS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACtBP,EAAA1B,EAAAC,cAAA,WACEyB,EAAA1B,EAAAC,cAAC4B,EAAA7B,EAAD,CAAQW,MAAM,aACde,EAAA1B,EAAAC,cAAC6B,EAAA,EAAD,MACAJ,EAAA1B,EAAAC,cAAA,OAAKC,UAAU,IAAI+B","file":"component---src-templates-tags-js-81408d667aaaf9a201b6.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    // const postLinks = posts.map(post => (\n    //   <li key={post.node.fields.slug}>\n    //     <Link to={post.node.fields.slug}>\n    //       <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n    //     </Link>\n    //   </li>\n    // ))\n    const postLinkss = posts.map(post => (\n        <div\n            className=\"content \"\n            key={post.id}\n        >\n            <p>\n                <Link className=\"has-text-grey-darker title is-5\" to={post.node.fields.slug}>\n                    {post.node.frontmatter.title}\n                </Link>\n           \n            </p>\n            <p>\n                <Link className=\"has-text-grey \" to={post.node.fields.slug}>\n                    {post.node.excerpt}\n                </Link>\n                <br />\n                <br />\n            </p>\n        </div>\n      ))\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <Layout>\n        {/* <section className=\"section\">\n          <Helmet title={`${tag} | ${title}`} />\n          <div className=\"container content\">\n            <div className=\"columns\">\n              <div\n                className=\"column is-10 is-offset-1\"\n                style={{ marginBottom: '6rem' }}\n              >\n                <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                <ul className=\"taglist\">{postLinks}</ul>\n                <p>\n                  <Link to=\"/tags/\">全部分类</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section> */}\n        <Helmet title={`${tag} | ${title}`} />\n     \n        <section className=\"container max-width\">\n            <div \n                className=\"section is-center\"\n            >\n               <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                {postLinkss}\n                {/* <Link to=\"/tags/\">全部分类</Link> */}\n            </div>\n          \n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 400)  \n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Navbar from '../components/Navbar'\nimport './all.sass'\n\nconst TemplateWrapper = ({ children }) => (\n  <div>\n    <Helmet title=\"luz-blog\" />\n    <Navbar />\n    <div className=\"\">{children}</div>\n  </div>\n)\n\nexport default TemplateWrapper"],"sourceRoot":""}