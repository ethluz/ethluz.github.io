{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Content.js"],"names":["BlogPostTemplate","_ref","content","contentComponent","tags","description","title","PostContent","Content","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","length","style","marginTop","map","tag","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","kebabCase","propTypes","PropTypes","node","isRequired","func","string","BlogPost","_ref2","post","data","markdownRemark","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","html","HTMLContent","frontmatter","shape","object","pageQuery","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","dangerouslySetInnerHTML","__html"],"mappings":"wRAQaA,EAAmB,SAAAC,GAO1B,IANJC,EAMID,EANJC,QACAC,EAKIF,EALJE,iBAEAC,GAGIH,EAJJI,YAIIJ,EAHJG,MACAE,EAEIL,EAFJK,MAGMC,EAAcJ,GAAoBK,IAExC,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACdH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQJ,MAAUA,EAAL,YAEhBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sDACXN,GAGHG,EAAAC,EAAAC,cAACJ,EAAD,CAAaL,QAASA,IACrBE,GAAQA,EAAKU,OACZL,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEC,UAAS,SACrBP,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACXR,EAAKa,IAAI,SAAAC,GAAG,OACXT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,EAAG,OACVT,EAAAC,EAAAC,cAACS,EAAA,KAAD,CAAMC,GAAE,SAAWC,oBAAUJ,GAArB,KAA+BA,QAK7C,UAQhBlB,EAAiBuB,UAAY,CAC3BrB,QAASsB,IAAUC,KAAKC,WACxBvB,iBAAkBqB,IAAUG,KAC5BtB,YAAamB,IAAUI,OACvBtB,MAAOkB,IAAUI,QAInB,IAAMC,EAAW,SAAAC,GAAc,IACLC,EADKD,EAAXE,KACVC,eAER,OACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACX,EAAD,CACEE,QAAS6B,EAAKI,KACdhC,iBAAkBiC,IAClB/B,YAAa0B,EAAKM,YAAYhC,YAE9BD,KAAM2B,EAAKM,YAAYjC,KACvBE,MAAOyB,EAAKM,YAAY/B,UAMhCuB,EAASN,UAAY,CACnBS,KAAMR,IAAUc,MAAM,CACpBL,eAAgBT,IAAUe,UAIfV,YAER,IAAMW,EAAS,+CClFtBC,EAAAC,EAAAC,EAAA,sBAAAP,IAAA,IAAAQ,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAGaX,EAAc,SAAAnC,GAAA,IAAGC,EAAHD,EAAGC,QAASU,EAAZX,EAAYW,UAAZ,OACzBiC,EAAAnC,EAAAC,cAAA,OAAKC,UAAWA,EAAWqC,wBAAyB,CAAEC,OAAQhD,MAG1DM,EAAU,SAAAsB,GAAA,IAAG5B,EAAH4B,EAAG5B,QAASU,EAAZkB,EAAYlB,UAAZ,OACdiC,EAAAnC,EAAAC,cAAA,OAAKC,UAAWA,GAAYV,IAG9BM,EAAQe,UAAY,CAClBrB,QAASsB,IAAUC,KACnBb,UAAWY,IAAUI,QAGvBQ,EAAYb,UAAYf,EAAQe,UAEjBf","file":"component---src-templates-blog-post-js-61a6b5cccad9ef6bc4a9.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { kebabCase } from 'lodash'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const BlogPostTemplate = ({\n  content,\n  contentComponent,\n  description,\n  tags,\n  title,\n//   helmet,\n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <section className=\"section\">\n         <Helmet title={`${title} | Blog`} />\n      {/* {helmet || ''} */}\n      <div className=\"container  content\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n            {/* <p>{description}</p> */}\n            <PostContent content={content} />\n            {tags && tags.length ? (\n              <div style={{ marginTop: `4rem` }}>\n                <h4>Tags</h4>\n                <ul className=\"taglist\">\n                  {tags.map(tag => (\n                    <li key={tag + `tag`}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n//   helmet: PropTypes.instanceOf(Helmet),\n}\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <BlogPostTemplate\n        content={post.html}\n        contentComponent={HTMLContent}\n        description={post.frontmatter.description}\n        // helmet={<Helmet title={`${post.frontmatter.title} | Blog`} />}\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n"],"sourceRoot":""}